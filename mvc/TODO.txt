-	w makiecie obiektu opakowujacego polaczenie z baza danych (DataBaseAccessFAKE) zapomnialem uwzglednic nazw tabel
	utknolem na pisaniu wyrazenia regularnego parsujacego zapytania SQL

-	doprecyzowac jak dziala PDO tzn jakie jest lastInsertId i rowCount podczas wykonywania roznych zapytan (SELECT, INSERT, UDPATE, DELETE)

	mysqli moze zachowywac sie inaczej, sprawdzic to

						result()			getLastRowCount()	getLastInsertId()
		
	find ok				return array(1),	rowCount = 1,		lastInsertId = NULL
	find error			return array(0),	rowCount = 0,		lastInsertId = NULL

	findAll ok			return array(n),	rowCount = n,		lastInsertId = NULL
	findAll error		return array(0),	rowCount = 0,		lastInsertId = NULL

	insert ok			throw exception,	rowCount = 1,		lastInsertId = n
	insert error		throw exception,	rowCount = 0,		lastInsertId = NULL

	update ok			throw exception,	rowCount = 1,		lastInsertId = NULL
	update no modify	throw exception,	rowCount = 0,		lastInsertId = NULL
	update error		throw exception,	rowCount = 0,		lastInsertId = NULL

	delete ok			throw exception,	rowCount = 1,		lastInsertId = NULL
	delete error		throw exception,	rowCount = 0,		lastInsertId = NULL

	umiescic ww schemat w dokumentacji i wygenerowac dokumentacje za pomoca phpDoc...
	

-	uzupelnic o oblsuge mysqli i potestowac za pomoca phpunit hierarchie DataBaseAccess

-	dokonczyc kod metody wykonujacej operacje na zrodle danych DomainObjectWatcher::propertyOperations() 
	i potestowac Unity of Work przy pomocy testow phpunit

-	dodac autoryzacje (jesli to ma sens uzyc wzorca dekorator do dekoracji obiektu Request) 

-	dodac obsluge transakcji

-	dodac obsluge z konsoli

-	dodac inny sposob laczenia z baza danych (goly mysql)

-	dodac druga tabele w BD

-	dodac join w zapytania do bazy (druga tabela telefony)

-	wprowadzic przestrzenie nazw i zmodyfikowac system autoload
	w tej chwili autoload jest w pilki index.php, nie jest to poprawne miejsce

-	testy jednostkowe (bootstrap - dodac autoload)
